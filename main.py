import logging
import os
import nest_asyncio
import asyncio

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    WebAppInfo,
    MenuButtonWebApp
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes
)

# –†–∞–∑—Ä–µ—à–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã —Å–æ–±—ã—Ç–∏–π (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞, Jupyter –∏ —Ç.–¥.)
nest_asyncio.apply()

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è "token_zb"
BOT_TOKEN = os.getenv("token_zb")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /start handler
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π WebApp ("–í –ó–∞—Ä—é üåÖ").
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ Telegram –æ—Ç–∫—Ä–æ–µ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
    - –µ—Å–ª–∏ –¥–æ–º–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω, —Ç–æ —Å—Ä–∞–∑—É –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ;
    - –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—É —ç–∫—Ä–∞–Ω–∞.
    """
    keyboard = [
        [
            InlineKeyboardButton(
                text="–í –ó–∞—Ä—é üåÖ",
                web_app=WebAppInfo(url="https://belkinboris.github.io/zarya/")
                # –í–ê–ñ–ù–û: URL –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –¥–æ–º–µ–Ω–æ–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ BotFather /setdomain
            )
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        text="–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=reply_markup
    )

async def main():
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞.
    1. –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-–±–æ—Ç (Application).
    2. –°—Ç–∞–≤–∏–º –≥–ª–æ–±–∞–ª—å–Ω–æ Menu Button "–ó–∞–ø—É—Å–∫" (MenuButtonWebApp).
    3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä /start.
    4. –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (polling).
    """
    if not BOT_TOKEN:
        raise ValueError(
            "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. "
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è 'token_zb' —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞—à bot token."
        )

    # –®–∞–≥ 1. –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –®–∞–≥ 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–µ–Ω—é-–∫–Ω–æ–ø–∫—É (—Å–ª–µ–≤–∞ –æ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞):
    #    - MenuButtonWebApp —Å —Ç–µ–∫—Å—Ç–æ–º "–ó–∞–ø—É—Å–∫",
    #    - –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Ç–æ–º—É –∂–µ URL (–¥–æ–º–µ–Ω—É), —á—Ç–æ –∏ –≤ BotFather /setdomain.
    await application.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="–ó–∞–ø—É—Å–∫",
            web_app=WebAppInfo(url="https://belkinboris.github.io/zarya/")
        )
    )

    # –®–∞–≥ 3. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))

    # –®–∞–≥ 4. –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–æ–∂–∏–¥–∞–µ–º Ctrl+C –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞)
    await application.run_polling()

# –®–∞–≥ 5. –ó–∞–ø—É—Å–∫ main() –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º event loop
if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(main())
