import logging
import os
import nest_asyncio
import asyncio

from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    WebAppInfo
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes
)

# –†–∞–∑—Ä–µ—à–∞–µ–º –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–µ –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã event loop (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
nest_asyncio.apply()

# –í–∫–ª—é—á–∞–µ–º –±–∞–∑–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä
logging.basicConfig(level=logging.INFO)

# –ü—Ä–∏–º–µ—Ä: —á–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è 'token_zb'
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω: export token_zb="12345:YOUR_BOT_TOKEN"
BOT_TOKEN = os.getenv("token_zb")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π ¬´–í –ó–∞—Ä—é¬ª.
    
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏:
    - Telegram –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç mini-app (WebApp),
    - –ï—Å–ª–∏ –¥–æ–º–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –≤ BotFather, 
      –±—É–¥–µ—Ç popup ¬´By launching this Mini App‚Ä¶¬ª 
      –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω.
    """
    # –ö–Ω–æ–ø–∫–∞ —Å web_app=WebAppInfo(...) –≥–æ–≤–æ—Ä–∏—Ç –¢–µ–ª–µ–≥—Ä–∞–º—É,
    # —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –∏–º–µ–Ω–Ω–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ URL
    keyboard = [
        [
            InlineKeyboardButton(
                text="–í –ó–∞—Ä—é üåÖ",
                # –í–ê–ñ–ù–û: —É–∫–∞–∂–∏—Ç–µ —Ç—É—Ç –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL, 
                # –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ BotFather –∫–∞–∫ –¥–æ–º–µ–Ω –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                web_app=WebAppInfo(url="https://belkinboris.github.io/zarya/")
            )
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        text=(
            "–ü—Ä–∏–≤–µ—Ç! –ú—ã —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!\n\n"
            "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '–ó–∞—Ä—è'!"
        ),
        reply_markup=reply_markup
    )


async def main():
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É.
    –°–æ–∑–¥–∞—ë–º Application, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling.
    """
    if not BOT_TOKEN:
        raise ValueError("–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. "
                         "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è 'token_zb' –∑–∞–¥–∞–Ω–∞.")

    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–±–æ—Ç)
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start
    application.add_handler(CommandHandler("start", start))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤, –¥–æ Ctrl+C)
    await application.run_polling()

    
if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º main() –≤ —Ç–µ–∫—É—â–µ–º event loop
    asyncio.get_event_loop().run_until_complete(main())
